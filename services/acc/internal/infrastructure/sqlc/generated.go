// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc: v1.16.0
// source: queries.sql

package sqlc

import (
	"context"
)

type Queries struct {
	*Queries
}

func New(db *sql.DB) *Queries {
	return &Queries{
		Queries: NewQueries(db),
	}
}

func (q *Queries) CreateAccount(ctx context.Context, arg *CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, `
		INSERT INTO accounts (nama, nik, no_hp, pin, saldo)
		VALUES ($1, $2, $3, $4, $5)
		RETURNING no_rekening, nama, nik, no_hp, pin, saldo
	`, arg.Nama, arg.NIK, arg.NoHP, arg.PIN, arg.Saldo)
	var i Account
	err := row.Scan(&i.NoRekening, &i.Nama, &i.NIK, &i.NoHP, &i.PIN, &i.Saldo)
	return i, err
}

type CreateAccountParams struct {
	Nama string `db:"nama"`
	NIK  string `db:"nik"`
	NoHP string `db:"no_hp"`
	PIN  string `db:"pin"`
	Saldo int64 `db:"saldo"`
}

func (q *Queries) GetAccountByNoRekening(ctx context.Context, noRekening string) (Account, error) {
	row := q.db.QueryRowContext(ctx, `
		SELECT no_rekening, nama, nik, no_hp, pin, saldo
		FROM accounts
		WHERE no_rekening = $1
	`, noRekening)
	var i Account
	err := row.Scan(&i.NoRekening, &i.Nama, &i.NIK, &i.NoHP, &i.PIN, &i.Saldo)
	return i, err
}

func (q *Queries) UpdateAccountSaldo(ctx context.Context, arg *UpdateAccountSaldoParams) error {
	_, err := q.db.ExecContext(ctx, `
		UPDATE accounts
		SET saldo = $1
		WHERE no_rekening = $2
	`, arg.Saldo, arg.NoRekening)
	return err
}

type UpdateAccountSaldoParams struct {
	Saldo      int64 `db:"saldo"`
	NoRekening string `db:"no_rekening"`
}
